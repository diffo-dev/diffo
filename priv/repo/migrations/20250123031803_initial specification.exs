defmodule :"Elixir.Diffo.Repo.Migrations.Initial specification" do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:specifications, primary_key: false) do
      add(:type, :text, null: false, default: "serviceSpecification")
      add(:name, :text, null: false)
      add(:major_version, :bigint, null: false, default: 1)
      add(:minor_version, :bigint, null: false, default: 0)
      add(:patch_version, :bigint, null: false, default: 0)
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:description, :text)
      add(:tmf_version, :bigint, null: false, default: 4)

      add(:inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )
    end
  end

  def down do
    drop(table(:specifications))
  end
end
