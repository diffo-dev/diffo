defmodule Diffo.Repo.Migrations.NoteIdentityFix do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop_if_exists(
      unique_index(:notes, [:instance_id, :text], name: "notes_instance_text_uniqueness_index")
    )

    create unique_index(:notes, [:instance_id, :note_id, :text],
             name: "notes_instance_text_uniqueness_index"
           )
  end

  def down do
    drop_if_exists(
      unique_index(:notes, [:instance_id, :note_id, :text],
        name: "notes_instance_text_uniqueness_index"
      )
    )

    create unique_index(:notes, [:instance_id, :text],
             name: "notes_instance_text_uniqueness_index"
           )
  end
end
